class VacuumEnvironment:
    def _init_(self):
        # Initialize the rooms with random states (0 = clean, 1 = dirty)
        self.rooms = {'A': 1, 'B': 1}  # Both rooms start dirty
        self.vacuum_position = 'A'  # Vacuum starts at Room A

    def display_state(self):
        # Display the current state of the environment
        print(f"Room A: {'Dirty' if self.rooms['A'] else 'Clean'}, Room B: {'Dirty' if self.rooms['B'] else 'Clean'}")
        print(f"Vacuum is in Room {self.vacuum_position}\n")

    def is_clean(self):
        # Check if both rooms are clean
        return all(state == 0 for state in self.rooms.values())

    def perform_action(self, action):
        # Perform the action based on the current position of the vacuum
        if action == 'clean':
            self.rooms[self.vacuum_position] = 0
        elif action == 'move_right':
            self.vacuum_position = 'B'
        elif action == 'move_left':
            self.vacuum_position = 'A'

    def run(self):
        # Run the vacuum cleaner agent
        while not self.is_clean():
            self.display_state()
            # Determine the action based on the vacuum's position and room state
            if self.rooms[self.vacuum_position] == 1:
                print("Action: Clean")
                self.perform_action('clean')
            else:
                if self.vacuum_position == 'A':
                    print("Action: Move Right")
                    self.perform_action('move_right')
                else:
                    print("Action: Move Left")
                    self.perform_action('move_left')

        # Display final state
        self.display_state()
        print("All rooms are clean!")


# Create and run the vacuum environment
environment = VacuumEnvironment()
environment.run()
